---
import '@/styles/globals.css'
import '@fontsource-variable/jetbrains-mono'
import Header from '../components/header.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts'
import { CommandDialog } from '@/components/command-dialog'

interface Props {
  title?: string
  description?: string
  image?: string
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const {
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  image = '/blog-placeholder-1.jpg',
} = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/x-icon" href="favicon.ico" />
    <meta name="generator" content={Astro.generator} />

    <link rel="canonical" href={canonicalURL} />

    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <script is:inline>
      const persistedTheme = localStorage.getItem('theme')
      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)')
        .matches
        ? 'dark'
        : 'light'

      const theme =
        persistedTheme === 'system'
          ? systemTheme
          : persistedTheme ?? systemTheme

      document.documentElement.classList.remove('light', 'dark')
      document.documentElement.classList.add(theme)
    </script>
    <script>
      import { createIcons, Globe, Mail, ArrowRight, Briefcase } from 'lucide'

      createIcons({
        icons: {
          Globe,
          Mail,
          ArrowRight,
          Briefcase,
        },
      })
    </script>
  </head>
  <body>
    <Header />

    <slot />

    <footer class="mb-8"></footer>

    <CommandDialog client:load />

    <aside
      class="fixed h-8 z-10 bg-background bottom-0 left-0 right-0 border-t flex items-center justify-center"
    >
      <p class="text-sm text-muted-foreground">
        Press{' '}
        <kbd
          class="pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium text-muted-foreground opacity-100"
        >
          <span class="text-xs">âŒ˜</span>J
        </kbd>
      </p>
    </aside>
  </body>
</html>
